name: Build QMK firmware
on:
  push:
    branches:
      - main
      - master
      - 'develop**'
      - github-actions-build
jobs:
  gather-keyboards:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.repository}}
        ref: ${{ github.ref }}
    - id: set-matrix
      run: |
          content=$(bash bin/fp_build.sh -l | sed s~keyboards/fingerpunch/~~|  jq -Rsc '. / "\n" - [""]')
          content="{\"keyboard\":$content}"
          echo "::set-output name=matrix::$content"

  Build:
    needs: gather-keyboards
    runs-on: ubuntu-latest
    container: qmkfm/qmk_cli
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.gather-keyboards.outputs.matrix)}}
    steps:
      - name: Checkout QMK
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository}}
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Build firmware
        shell: bash
        run: |
          wget -q https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -O jq
          chmod +x jq
          mv jq /usr/local/sbin/

          #keyboards="$(qmk list-keyboards| grep fingerpunch)"
          keyboards=$(bash bin/fp_build.sh -l| sed s~keyboards/~~)
          all_make_commands_raw=$(bash bin/fp_build.sh)
          
          readarray -t all_make_commands <<<"$all_make_commands_raw"

          echo "${keyboards}" | while IFS= read -r line ; do
            board_map="default"
            case "$line" in
              *${{ matrix.keyboard }}*)
                for per_board_make in "${all_make_commands[@]}"
                  do
                    :             
                    #echo "line to build $line"
                    #echo "per board to make $per_board_make"
                    per_board_make_specifc=$(echo "$per_board_make"|awk -F ' ' '{print $2}'|cut -d ":" -f 1)
                    #echo "$per_board_make_specifc"
                    #if echo "$per_board_make" | grep -q "$line"; then
                    if [[ "$per_board_make_specifc" == "$line" ]]; then
                      echo "MAKE command run:"
                      echo "$per_board_make"
                      #$per_board_make
                    fi
                  done
              ;;
            esac
          done

      - name: Archive firmware
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: ${{ matrix.file }}_${{ github.actor }}
          path: |
            *.hex
            *.bin
            *.uf2

